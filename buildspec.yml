version: 0.2
env:
  secrets-manager:
    LOGIN: sonarCloudSecret:sonartoken
    HOST: sonarCloudSecret:HOST
    Organization: sonarCloudSecret:Organization
    Project: sonarCloudSecret:Project
phases:
  install:
    runtime-versions:
      nodejs: 12
      python: 3.x
    commands:
      # Install dependencies needed for running tests
      - npm install
      - npm install --global cfn-include

      # Upgrade AWS CLI to the latest version
      - pip3 uninstall -y botocore
      - pip3 install botocore==1.15.49
      - pip3 install --upgrade moto
      - pip3 install --upgrade pylint
      - pip3 install --upgrade moviepy
      - pip3 install --upgrade pytest-cov
      - pip3 install --upgrade aws-lambda-context
      #- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      #- timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      # Sonar scanner installation
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
      - export PATH=$PATH:./sonar-scanner-3.3.0.1492-linux/bin/
  pre_build:
    commands:
      - npm test
      #- $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      #- REPOSITORY_URI=693949087897.dkr.ecr.us-east-2.amazonaws.com/ahlcontainer
      #- COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
      - pytest --cov-report xml --cov python/src
      - sonar-scanner -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.organization=$Organization
  post_build:
    commands:
      # Remove existing node_modules to clear dev dependencies
      - rm -r node_modules

      # Install runtime dependencies
      - npm install --production
      - python state_machine_injection.py -s VideoStateMachine.json -c template.yml -o template.complete.yml
      - aws cloudformation package --template template.complete.yml --s3-bucket $S3_BUCKET --output-template-file template-export.yml

      # Do not remove this statement. This command is required for AWS CodeStar projects.
      # Update the AWS Partition, AWS Region, account ID and project ID in the project ARN on template-configuration.json file so AWS CloudFormation can tag project resources.
      - sed -i.bak 's/\$PARTITION\$/'${PARTITION}'/g;s/\$AWS_REGION\$/'${AWS_REGION}'/g;s/\$ACCOUNT_ID\$/'${ACCOUNT_ID}'/g;s/\$PROJECT_ID\$/'${PROJECT_ID}'/g' template-configuration.json
artifacts:
  files:
    - template-export.yml
    - template-configuration.json
reports:
  nyc:
    files:
      - '.nyc_output/**/*'
      - 'test-results.xml'
cache:
  paths:
    - sonar-scanner-cli-3.3.0.1492-linux.zip
    - ./sonar-scanner-3.3.0.1492-linux/**
