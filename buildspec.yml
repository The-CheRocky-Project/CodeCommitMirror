version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      # Install dependencies needed for running tests
      - npm install

      # Upgrade AWS CLI to the latest version
      - pip3 install --upgrade awscli
      - pip install pylint
      - pip install boto3
      - pip install moto
      - pip install moviepy
      - pip install pytest-cov
      #- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      #- timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      # Sonar scanner installation
      - export SONAR_SCANNER_VERSION=4.2.0.1873
      - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
      - curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
      - unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
      - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
      - export SONAR_SCANNER_OPTS="-server"
  pre_build:
    commands:
      - npm test
      #- $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      #- REPOSITORY_URI=693949087897.dkr.ecr.us-east-2.amazonaws.com/ahlcontainer
      #- COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
      - pytest --cov-report xml --cov python/src
      sonar-scanner \
        -Dsonar.organization=the-cherocky-project \
        -Dsonar.projectKey=The-CheRocky-Project_CodeCommitMirror \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=b6ce9fb2ade25b4c7a7b4636c4b7b62038c96b3b
  post_build:
    commands:
      # Remove existing node_modules to clear dev dependencies
      - rm -r node_modules

      # Install runtime dependencies
      - npm install --production
      - aws cloudformation package --template template.yml --s3-bucket $S3_BUCKET --output-template-file template-export.yml

      # Do not remove this statement. This command is required for AWS CodeStar projects.
      # Update the AWS Partition, AWS Region, account ID and project ID in the project ARN on template-configuration.json file so AWS CloudFormation can tag project resources.
      - sed -i.bak 's/\$PARTITION\$/'${PARTITION}'/g;s/\$AWS_REGION\$/'${AWS_REGION}'/g;s/\$ACCOUNT_ID\$/'${ACCOUNT_ID}'/g;s/\$PROJECT_ID\$/'${PROJECT_ID}'/g' template-configuration.json
artifacts:
  files:
    - template-export.yml
    - template-configuration.json
reports:
  nyc:
    files:
      - '.nyc_output/**/*'
      - 'test-results.xml'
